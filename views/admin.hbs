<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="utf-8">
  <title>Bianca 10 anos! üéâ üéä </title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="icon" type="image/x-icon" href="favicon.ico">
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="/css/main.css" rel="stylesheet">
  <!-- Font Awesome icons (free version)-->
  <script src="https://use.fontawesome.com/releases/v6.1.0/js/all.js" crossorigin="anonymous"></script>
  <!-- Google fonts-->
  <link href="https://fonts.googleapis.com/css?family=Raleway:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet" />
  <link href="https://fonts.googleapis.com/css?family=Lora:400,400i,700,700i" rel="stylesheet" />
</head>
<body>
<header>
  <h1 class="site-heading text-center text-faded d-lg-block">
    <span class="site-heading-upper text-primary mb-3">Chegou a hora de comemoramos juntos!</span>
    <span class="site-heading-lower">Bianca 10 anos!</span>
  </h1>
</header>


<section class="page-section about-heading">
  <div id="app" class="container">
    <div class="about-heading-content">
      <div class="row">
        <div class="col-xl-9 col-lg-10 mx-auto">
          <div class="bg-faded rounded p-5">
            <h2 class="section-heading mb-4">
              <span class="section-heading-lower">Cadastre Convidados</span>
            </h2>
              <form @submit.prevent="save" >
                <div class="form-floating mb-3">
                  <input type="text" class="form-control" id="name" v-model="participant.name" placeholder="Seu Nome">
                  <label for="name">Nome</label>
                </div>
                <div class="form-floating mb-3">
                  <input type="number" class="form-control" id="phone" v-model="participant.phone" placeholder="Seu Telefone">
                  <label for="phone">Telefone</label>
                </div>
                <div class="form-floating mb-3">
                  <button type="button" class="btn btn-outline-primary" @click="addGuest">
                    <em class="fa-solid fa-plus"></em> Add Acompanhante
                  </button>
                </div>
                <div v-for="guest in participant.guests" >
                  <div class="input-group mb-3 guests">
                    <div class="form-floating mb-3 col-8">
                      <input type="text" class="form-control" v-model="guest.name" id="guestName" placeholder="Acompanhante">
                      <label for="guestName">Nome do acompanhante</label>
                    </div>
                    <div class="form-check">
                      <input class="form-check-input checkbox-xl" v-model="guest.isKid" type="checkbox">
                      <label class="form-check-label" style="padding-left: 8px">
                        Menor de 15 anos?
                      </label>
                    </div>
                    <div class="form-floating mb-3">
                      <button type="button" class="btn btn-outline-primary">
                        <em class="fa-solid fa-trash-can"></em>
                      </button>
                    </div>
                  </div>
                </div>
                <button class="btn btn-success col-12" type="submit">
                  Salvar
                  <span class="spinner-border spinner-border-sm" v-if="loading" role="status" aria-hidden="true"></span>
                </button>
                <small class="form-text text-success" v-if="successAlert" >Dados salvos com sucesso ü•≥ </small>
                <small class="form-text text-danger" v-if="errorAlert" >Deu falha ao salvar os dados </small>
              </form>
          </div>
        </div>
      </div>
    </div>
    <div class="bg-faded rounded p-1 mt-5">
      <p-datatable v-model:filters="filters" :value="participants" stripedRows paginator :rows="5" filterDisplay="row"
                   :globalFilterFields="['name']">
        <template #header>
          <div class="flex justify-end">
            <p-iconfield>
              <p-inputicon>
                <i class="pi pi-search" />
              </p-inputicon>
              <p-inputtext v-model="filters['global'].value" placeholder="Buscar" />
            </p-iconfield>
          </div>
        </template>
        <p-column field="id" header="ID"></p-column>
        <p-column field="name" sortable header="Nome"></p-column>
        <p-column field="phone" header="Telefone"></p-column>
        <!--      <p-column field="guests" header="Acompanhantes"></p-column>-->
      </p-datatable>
    </div>
  </div>
</section>
<footer class="footer text-faded text-center py-5">
  <div class="container"><p class="m-0 small">Feito com ‚ù§Ô∏è pelo papai <a href="https://www.linkedin.com/in/ü§ì-jefferson-alves-reis-00007361/">jefaokpta</a> 2024 </p></div>
</footer>
<p-toast />

<script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
<script src="https://unpkg.com/primevue/umd/primevue.min.js"></script>
<script src="https://unpkg.com/@primevue/themes/umd/aura.min.js"></script>

<script>
  const { createApp, ref } = Vue
  const FilterMatchMode = PrimeVue.FilterMatchMode
  const searchParams = new URLSearchParams(window.location.search)
  const id = searchParams.get('id')
  const app = createApp({
    setup() {
      const participant = ref({
        name: '',
        phone: '',
        guests: []
      })
      const participants = ref([])
      const loading = ref(false)
      const successAlert = ref(false)
      const errorAlert = ref(false)
      const filters = ref({
          global: { value: null, matchMode: FilterMatchMode.CONTAINS }
      });
      return {
        participant,
        participants,
        loading,
        successAlert,
        errorAlert,
        filters
      }
    },
    async mounted() {
      if (id) {
        const response = await fetch(`participants/${id}`)
        this.participant = await response.json()
      }
      const response = await fetch(`participants`)
      this.participants = await response.json()
    },
    methods: {
      async save() {
        this.loading = true
        const response = await fetch(`participants`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(this.participant)
        })
        this.loading = false
        if (response.ok) {
          this.successAlert = true
          this.participant = {}
          this.hideSuccessAlert()
        } else {
          this.errorAlert = true
        }
      },
      addGuest() {
        this.participant.guests.push({ name: '', isKid: false })
      },
      hideSuccessAlert() {
        setTimeout(() => {
          this.successAlert = false
        }, 10000)
      }
    }
  })
  app.use(PrimeVue.Config, {
    theme: {
      preset: PrimeVue.Themes.Aura,
      options: {
        darkModeSelector: 'false',
      }
    }
  });
  app.component('p-datatable', PrimeVue.DataTable);
  app.component('p-column', PrimeVue.Column);
  app.component('p-columngroup', PrimeVue.ColumnGroup);
  app.component('p-row', PrimeVue.Row);
  app.component('p-iconfield', PrimeVue.IconField);
  app.component('p-inputtext', PrimeVue.InputText);
  app.component('p-inputicon', PrimeVue.InputIcon);
  app.mount('#app')

</script>
</body>
</html>
